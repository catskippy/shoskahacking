import time
import random
import os

def print_with_delay(message, delay=0.05):
    for char in message:
        print(char, end='', flush=True)
        time.sleep(delay)
    print()
# это нейронка сгенерировала и здесь ~52+ команды
def generate_response(command):
    """Генерирует фейковый ответ для команды."""
    responses = {
        "ping nexus_host -t": "Ответ от nexus_host: время=52мс",
        "tracert nexus_host": "Трассировка маршрута к nexus_host: пройдено 12 прыжков",
        "nslookup nexus_host": "Имя: nexus_host\nAddress: 192.168.1.1",
        "nmap -sS nexus_host": "Starting Nmap 7.80 ( https://nmap.org )\nNmap scan report for nexus_host\nHost is up (0.052s latency).\nNot shown: 999 closed ports\nPORT   STATE SERVICE\n80/tcp open  http",
        "telnet nexus_host 80": "Подключение к nexus_host... Успешно",
        "netstat -an | find 'ESTABLISHED'": "TCP    192.168.1.100:50232    192.168.1.1:80    ESTABLISHED",
        "ipconfig /all": "Ethernet adapter Ethernet:\n   Connection-specific DNS Suffix  . :\n   Link-local IPv6 Address . . . . . : fe80::d8cb:8fff:fe12:3456%12\n   IPv4 Address. . . . . . . . . . . : 192.168.1.100\n   Subnet Mask . . . . . . . . . . . : 255.255.255.0\n   Default Gateway . . . . . . . . . : 192.168.1.1",
        "route print": "IPv4 Route Table\n===========================================================================\nActive Routes:\nNetwork Destination        Netmask          Gateway       Interface  Metric\n          0.0.0.0          0.0.0.0      192.168.1.1   192.168.1.100     25",
        "arp -a": "Interface: 192.168.1.100 --- 0x12\n  Internet Address      Physical Address      Type\n  192.168.1.1           d8-cb-8a-12-34-56     dynamic",
        "systeminfo": "Host Name:                 NEXUS-HOST\nOS Name:                   Microsoft Windows 10 Pro\nOS Version:                10.0.19041 N/A Build 19041\nSystem Manufacturer:       Dell Inc.\nSystem Model:              XPS 15 9570",
        "tasklist": """Image Name                     PID Session Name        Session#    Mem Usage
========================= ======== ================ =========== ============
antivirus.exe                 1234 Services                   0     50,000 K
svchost.exe                   4321 Services                   0    100,000 K
explorer.exe                  5678 Console                    1     80,000 K
notepad.exe                   8765 Console                    1     10,000 K
chrome.exe                    2345 Console                    1    200,000 K
skippy.exe                    1357 Services                   0     30,000 K
midnightecho.exe              9753 Services                   0     40,000 K
kotokotsleshkav2.exe          1122 Services                   0     25,000 K""",
        "taskkill /F /IM antivirus.exe": "УСПЕШНО: процесс \"antivirus.exe\" (PID 1234) был завершен.",
        "reg query HKLM\\Software\\Microsoft\\Windows\\CurrentVersion\\Run": "HKEY_LOCAL_MACHINE\\Software\\Microsoft\\Windows\\CurrentVersion\\Run\n    OneDrive    REG_SZ    \"C:\\Program Files\\Microsoft OneDrive\\OneDrive.exe\" /background",
        "netsh firewall show state": "Operational mode             = Enable\nException mode               = Enable\nMulticast/broadcast response mode = Enable\nNotification mode            = Enable",
        "net user hacker /add": "Команда выполнена успешно.",
        "net localgroup administrators hacker /add": "Команда выполнена успешно.",
        "whoami": "nexus_host\\hacker",
        "sc query": "SERVICE_NAME: firewall\n        TYPE               : 20  WIN32_SHARE_PROCESS\n        STATE              : 4  RUNNING",
        "sc stop firewall": "SERVICE_NAME: firewall\n        TYPE               : 20  WIN32_SHARE_PROCESS\n        STATE              : 3  STOP_PENDING",
        "sc config firewall start= disabled": "[SC] ChangeServiceConfig УСПЕШНО",
        "shutdown -s -t 0": "Shutdown initiated.",
        "echo 'Внедрение SQL-инъекции' > log.txt": "SQL-инъекция внедрена.",
        "echo 'SELECT * FROM users' > query.sql": "SQL запрос сохранен.",
        "mysql -u root -p < query.sql": "Запрос выполнен.",
        "echo 'Инъекция выполнена' >> log.txt": "Инъекция выполнена.",
        "echo 'Скачивание данных' > download.log": "Скачивание данных началось.",
        "wget http://nexus_host/data.zip": "Скачивание data.zip завершено.",
        "unzip data.zip": "Архив data.zip успешно распакован.",
        "rm -rf /var/log/*": "Логи успешно удалены.",
        "echo 'Удаление логов' > clear.log": "Логи удалены.",
        "echo 'Изменение конфигурации' > config.log": "Конфигурация изменена.",
        "vim /etc/hosts": "Файл /etc/hosts отредактирован.",
        "echo '127.0.0.1 nexus_host' >> /etc/hosts": "Запись добавлена в /etc/hosts.",
        "iptables -F": "Все правила iptables очищены.",
        "iptables -A INPUT -p tcp --dport 80 -j ACCEPT": "Правило добавлено в iptables.",
        "iptables -A OUTPUT -p tcp --sport 80 -j ACCEPT": "Правило добавлено в iptables.",
        "echo 'Конфигурация завершена' >> config.log": "Конфигурация завершена.",
        "chmod +x /root/hack_script.sh": "Права доступа изменены.",
        "/root/hack_script.sh": "Скрипт выполнен.",
        "echo 'Создание резервной копии' > backup.log": "Создание резервной копии началось.",
        "tar -czvf backup.tar.gz /var/www": "Резервная копия /var/www создана.",
        "scp backup.tar.gz user@nexus_host:/backup": "Резервная копия передана.",
        "echo 'Резервная копия создана' > backup.log": "Рехервная копия создана",
        "echo 'Завершение работы' > end.log": "Работа завершена.",
        "reboot": "Перезагрузка системы.",
        "echo 'Поиск уязвимостей' > vuln_scan.log": "Поиск уязвимостей начался.",
        "echo 'Запуск сканера' >> vuln_scan.log": "Сканер запущен.",
        "nikto -h nexus_host": "Nikto v2.1.6\nHost: nexus_host\n+ Server: Apache/2.4.41 (Ubuntu)\n+ The X-XSS-Protection header is not defined. This header can hint to the user agent to protect against some forms of XSS\n+ The site uses SSL and the Strict-Transport-Security HTTP header is not defined.",
        "echo 'Сканирование завершено' >> vuln_scan.log": "Сканирование завершено.",
        "echo 'Поиск эксплойтов' > exploit_search.log": "Поиск эксплойтов начался.",
        "searchsploit nexus_host": "-----------------------------------------------------------------\n Exploit Title                                                   |  Path\n-----------------------------------------------------------------\nApache 2.4.41 - Remote Code Execution                             | /exploit/linux/remote/47684.py\n-----------------------------------------------------------------",
        "echo 'Эксплойты найдены' >> exploit_search.log": "Эксплойты найдены."
    }
    return responses.get(command, "Команда выполнена.")

def introduce_error(command):
    """какие то ошибки ааа."""
    errors = [
        "Ошибка подключения к серверу!",
        "Команда завершилась с ошибкой.",
        "Неизвестная ошибка.",
        "Доступ запрещен.",
        "Сбой сети.",
        "Команда не найдена."
    ]
    return random.choice(errors)

def fake_hacking():
    print_with_delay("Инициализация взлома...", 0.1)
    time.sleep(1)
    
    # взлом админки
    print_with_delay("> Авторизация в админку Nexus хоста...", 0.1)
    time.sleep(2)
    print_with_delay("Логин: vanuxa_fbi", 0.1)
    time.sleep(1)
    print_with_delay("Пароль: ********", 0.1)
    time.sleep(1)
    print_with_delay("Авторизация успешна!", 0.1)
    time.sleep(1)

    commands = [
        "ping nexus_host -t",
        "tracert nexus_host",
        "nslookup nexus_host",
        "nmap -sS nexus_host",
        "telnet nexus_host 80",
        "netstat -an | find 'ESTABLISHED'",
        "ipconfig /all",
        "route print",
        "arp -a",
        "systeminfo",
        "tasklist",
        "taskkill /F /IM antivirus.exe",
        "reg query HKLM\\Software\\Microsoft\\Windows\\CurrentVersion\\Run",
        "netsh firewall show state",
        "net user hacker /add",
        "net localgroup administrators hacker /add",
        "whoami",
        "sc query",
        "sc stop firewall",
        "sc config firewall start= disabled",
        "shutdown -s -t 0",
        "echo 'Внедрение SQL-инъекции' > log.txt",
        "echo 'SELECT * FROM users' > query.sql",
        "mysql -u root -p < query.sql",
        "echo 'Инъекция выполнена' >> log.txt",
        "echo 'Скачивание данных' > download.log",
        "wget http://nexus_host/data.zip",
        "unzip data.zip",
        "rm -rf /var/log/*",
        "echo 'Удаление логов' > clear.log",
        "echo 'Изменение конфигурации' > config.log",
        "vim /etc/hosts",
        "echo '127.0.0.1 nexus_host' >> /etc/hosts",
        "iptables -F",
        "iptables -A INPUT -p tcp --dport 80 -j ACCEPT",
        "iptables -A OUTPUT -p tcp --sport 80 -j ACCEPT",
        "echo 'Конфигурация завершена' >> config.log",
        "chmod +x /root/hack_script.sh",
        "/root/hack_script.sh",
        "echo 'Создание резервной копии' > backup.log",
        "tar -czvf backup.tar.gz /var/www",
        "scp backup.tar.gz user@nexus_host:/backup",
        "echo 'Резервная копия создана' >> backup.log",
        "echo 'Завершение работы' > end.log",
        "reboot",
        "echo 'Поиск уязвимостей' > vuln_scan.log",
        "echo 'Запуск сканера' >> vuln_scan.log",
        "nikto -h nexus_host",
        "echo 'Сканирование завершено' >> vuln_scan.log",
        "echo 'Поиск эксплойтов' > exploit_search.log",
        "searchsploit nexus_host",
        "echo 'Эксплойты найдены' >> exploit_search.log"
    ]

    for command in commands:
        print_with_delay(f"> {command}", random.uniform(0.05, 0.15))
        time.sleep(random.uniform(0.1, 0.3))
        
        if random.random() < 0.2:  # 20% шанс на ошибку
            response = introduce_error(command)
            print_with_delay(response, random.uniform(0.01, 0.05))
            time.sleep(random.uniform(0.1, 0.3))
            print_with_delay("Попытка выполнить альтернативную команду...", random.uniform(0.05, 0.15))
            time.sleep(random.uniform(0.1, 0.3))
            response = generate_response(command)
        else:
            response = generate_response(command)

        print_with_delay(response, random.uniform(0.01, 0.05))
        time.sleep(random.uniform(0.1, 0.3))

    # крадем клиентов хоста ко мне в подвал и удаляем миднихтэхо, пока он не переехал на ShrekHost
    # тоже нейронка сгенерировала
    extra_commands = [
        "echo 'Экспорт данных клиентов с Pterodactyl' > pterodactyl.log",
        "wget http://nexus_host/pterodactyl_clients.zip",
        "unzip pterodactyl_clients.zip -d /data/pterodactyl",
        "echo 'Данные клиентов успешно экспортированы' >> pterodactyl.log",
        "echo 'Удаление MidnightEcho' > midnightecho.log",
        "taskkill /F /IM midnightecho.exe",
        "del /f /q Z:/servers/nexusvedro1/midnightecho",
        "echo 'MidnightEcho успешно удален' >> midnightecho.log",
        "echo 'Операция завершена' > operation_end.log"
    ]

    for command in extra_commands:
        print_with_delay(f"> {command}", random.uniform(0.05, 0.15))
        time.sleep(random.uniform(0.1, 0.3))
        response = generate_response(command)
        print_with_delay(response, random.uniform(0.01, 0.05))
        time.sleep(random.uniform(0.1, 0.3))

    print_with_delay("Взлом завершен успешно!", 0.1)

def show_warning():
    os.system('cls' if os.name == 'nt' else 'clear')
    warning_message = """
    **************************************************************
    *                                                            *
    *                          ВНИМАНИЕ!!!                       *
    *                                                            *
    *      Обнаружена подозрительная активность на сервере!      *
    *      В системе происходит несанкционированный доступ!      *
    *                                                            *
    *      НЕМЕДЛЕННО ОБРАТИТЕСЬ К АДМИНИСТРАТОРУ СИСТЕМЫ!       *
    *                                                            *
    **************************************************************
    """
    print_with_delay(warning_message, 0.01)

def main():
    show_warning()
    time.sleep(5)
    fake_hacking()
    print_with_delay("В общем, всё в порядке, Ванюха! (не бей меня лопатой)", 0.1)

if __name__ == "__main__":
    main()
